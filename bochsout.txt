00000000000i[      ] Bochs x86 Emulator 2.8
00000000000i[      ]   Built from GitHub snapshot on March 10, 2024
00000000000i[      ]   Timestamp: Sun Mar 10 08:00:00 CET 2024
00000000000i[      ] System configuration
00000000000i[      ]   processors: 1 (cores=1, HT threads=1)
00000000000i[      ]   A20 line support: yes
00000000000i[      ] IPS is set to 10000000
00000000000i[      ] CPU configuration
00000000000i[      ]   SMP support: yes, quantum=16
00000000000i[      ]   level: 6
00000000000i[      ]   APIC support: xapic
00000000000i[      ]   FPU support: yes
00000000000i[      ]   MMX support: yes
00000000000i[      ]   3dnow! support: yes
00000000000i[      ]   SEP support: yes
00000000000i[      ]   SIMD support: sse2
00000000000i[      ]   XSAVE support: no 
00000000000i[      ]   AES support: no
00000000000i[      ]   SHA support: no
00000000000i[      ]   MOVBE support: no
00000000000i[      ]   ADX support: no
00000000000i[      ]   x86-64 support: yes
00000000000i[      ]   1G paging support: no
00000000000i[      ]   MWAIT support: yes
00000000000i[      ] Optimization configuration
00000000000i[      ]   RepeatSpeedups support: no
00000000000i[      ]   Fast function calls: no
00000000000i[      ]   Handlers Chaining speedups: no
00000000000i[      ] Devices configuration
00000000000i[      ]   PCI support: i440FX i430FX i440BX
00000000000i[      ]   Networking: no
00000000000i[      ]   Sound support: no
00000000000i[      ]   USB support: UHCI
00000000000i[      ]   VGA extension support: vbe
00000000000i[IMG   ] Disk image modules
00000000000i[IMG   ]   flat concat sparse dll growing undoable volatile vmware3
00000000000i[IMG   ]   vmware4 vbox vpc vvfat
00000000000i[USBCTL] Pluggable USB devices
00000000000i[USBCTL]   floppy mouse tablet keypad keyboard hub disk cdrom
00000000000i[USBCTL]   printer
00000000000i[MEM0  ] allocated memory at 0x7f7366000010. after alignment, vector=0x7f7366001000, block_size = 128K
00000000000i[MEM0  ] 32.00MB
00000000000i[MEM0  ] mem block size = 0x00020000, blocks=256
00000000000i[MEM0  ] rom at 0xfffe0000/131072 ('/usr/share/bochs/BIOS-bochs-latest')
00000000000i[CPU0  ] WARNING: 3DNow! is not implemented yet !
00000000000i[DEV   ] will paste characters every 100 iodev timer ticks
00000000000i[PLUGIN] init_dev of 'pci' plugin device by virtual method
00000000000i[DEV   ] i440FX PMC present at device 0, function 0
00000000000i[PLUGIN] init_dev of 'pci2isa' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[PLUGIN] init_dev of 'cmos' plugin device by virtual method
00000000000i[CMOS  ] Using local time for initial clock
00000000000i[CMOS  ] Setting initial clock to: Mon Oct 21 10:16:54   2024 tz=utc (time0=1729505814)
00000000000i[PLUGIN] init_dev of 'dma' plugin device by virtual method
00000000000i[DMA   ] channel 4 used by cascade
00000000000i[PLUGIN] init_dev of 'pic' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'pit' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'vga' plugin device by virtual method
00000000000i[MEM0  ] Register memory access handlers: 0x0000000a0000 - 0x0000000bffff
00000000000i[VGA   ] interval=100000, mode=realtime
00000000000i[VGA   ] Setting VGA update interval to 100000 (10.0 Hz)
00000000000i[VGA   ] VSYNC using standard mode
00000000000i[MEM0  ] Register memory access handlers: 0x0000e0000000 - 0x0000e0ffffff
00000000000i[BXVGA ] VBE Bochs Display Extension Enabled
00000000000i[XGUI  ] test_alloc_colors: 16 colors available out of 16 colors tried
00000000000i[XGUI  ] font 8 wide x 16 high, display depth = 24
00000000000i[XGUI  ] maximum host resolution: x=2560 y=1550
00000000000i[MEM0  ] rom at 0xc0000/36352 ('/usr/share/bochs/VGABIOS-lgpl-latest')
00000000000i[PLUGIN] init_dev of 'floppy' plugin device by virtual method
00000000000i[DMA   ] channel 2 used by Floppy Drive
00000000000i[FLOPPY] tried to open '/dev/fd0' read/write: No such file or directory
00000000000i[FLOPPY] tried to open '/dev/fd0' read only: No such file or directory
00000000000i[FLOPPY] Using boot sequence disk, none, none
00000000000i[FLOPPY] Floppy boot signature check is enabled
00000000000i[PLUGIN] init_dev of 'acpi' plugin device by virtual method
00000000000i[DEV   ] ACPI Controller present at device 1, function 3
00000000000i[PLUGIN] init_dev of 'hpet' plugin device by virtual method
00000000000i[HPET  ] initializing HPET
00000000000i[MEM0  ] Register memory access handlers: 0x0000fed00000 - 0x0000fed003ff
00000000000i[PLUGIN] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAPIC] initializing I/O APIC
00000000000i[MEM0  ] Register memory access handlers: 0x0000fec00000 - 0x0000fec00fff
00000000000i[IOAPIC] IOAPIC enabled (base address = 0xfec00000)
00000000000i[PLUGIN] init_dev of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD    ] HD on ata0-0: 'wordos.iso', 'flat' mode
00000000000i[IMG   ] hd_size: 28977152
00000000000i[HD    ] ata0-0: autodetect geometry: CHS=56/16/63 (sector size=512)
00000000000i[HD    ] ata0-0: extra data outside of CHS address range
00000000000i[HD    ] translation on ata0-0 set to 'none'
00000000000i[PLUGIN] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[PLUGIN] init_dev of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'speaker' plugin device by virtual method
00000000000e[PCSPK ] Failed to open /dev/console: Permission denied
00000000000e[PCSPK ] Deactivating beep on console
00000000000i[PLUGIN] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR   ] parallel port 1 at 0x0378 irq 7
00000000000i[PLUGIN] init_dev of 'serial' plugin device by virtual method
00000000000i[SER   ] com1 at 0x03f8 irq 4 (mode: null)
00000000000i[PLUGIN] init_dev of 'iodebug' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'usb_uhci' plugin device by virtual method
00000000000i[DEV   ] USB UHCI present at device 1, function 2
00000000000i[UHCI  ] USB UHCI initialized
00000000000i[PLUGIN] register state of 'pci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] register state of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] register state of 'dma' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pit' plugin device by virtual method
00000000000i[PLUGIN] register state of 'vga' plugin device by virtual method
00000000000i[PLUGIN] register state of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] register state of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] register state of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] register state of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] register state of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] register state of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] register state of 'serial' plugin device by virtual method
00000000000i[PLUGIN] register state of 'iodebug' plugin device by virtual method
00000000000i[PLUGIN] register state of 'usb_uhci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] register state of 'hpet' plugin device by virtual method
00000000000i[PLUGIN] register state of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] register state of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci_ide' plugin device by virtual method
00000000000i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0  ] cpu hardware reset
00000000000i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00000000000i[CPU0  ] CPU[0] is the bootstrap processor
00000000000i[CPU0  ] CPUID[0x00000000]: 00000005 68747541 444d4163 69746e65
00000000000i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00002008 078bfbff
00000000000i[CPU0  ] CPUID[0x00000002]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00000000000i[CPU0  ] CPUID[0x80000000]: 80000008 68747541 444d4163 69746e65
00000000000i[CPU0  ] CPUID[0x80000001]: 00000633 00000000 00000101 ebd3f3ff
00000000000i[CPU0  ] CPUID[0x80000002]: 20444d41 6c687441 74286e6f 7020296d
00000000000i[CPU0  ] CPUID[0x80000003]: 65636f72 726f7373 00000000 00000000
00000000000i[CPU0  ] CPUID[0x80000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00000000000i[CPU0  ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00000000000i[CPU0  ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x80000008]: 00003028 00000200 00000000 00000000
00000000000i[CPU0  ] CPU Features supported:
00000000000i[CPU0  ] 		"x87"
00000000000i[CPU0  ] 		"486ni"
00000000000i[CPU0  ] 		"pentium_ni"
00000000000i[CPU0  ] 		"p6ni"
00000000000i[CPU0  ] 		"mmx"
00000000000i[CPU0  ] 		"3dnow"
00000000000i[CPU0  ] 		"debugext"
00000000000i[CPU0  ] 		"vme"
00000000000i[CPU0  ] 		"pse"
00000000000i[CPU0  ] 		"pae"
00000000000i[CPU0  ] 		"pge"
00000000000i[CPU0  ] 		"pse36"
00000000000i[CPU0  ] 		"mtrr"
00000000000i[CPU0  ] 		"pat"
00000000000i[CPU0  ] 		"sysenter_sysexit"
00000000000i[CPU0  ] 		"clflush"
00000000000i[CPU0  ] 		"sse"
00000000000i[CPU0  ] 		"sse2"
00000000000i[CPU0  ] 		"mwait"
00000000000i[CPU0  ] 		"longmode"
00000000000i[CPU0  ] 		"lm_lahf_sahf"
00000000000i[CPU0  ] 		"nx"
00000000000i[CPU0  ] 		"cmpxhg16b"
00000000000i[CPU0  ] 		"rdtscp"
00000000000i[CPU0  ] 		"ffxsr"
00000000000i[CPU0  ] 		"xapic"
00000000000i[PLUGIN] reset of 'pci' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] reset of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] reset of 'dma' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pit' plugin device by virtual method
00000000000i[PLUGIN] reset of 'vga' plugin device by virtual method
00000000000i[PLUGIN] reset of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] reset of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] reset of 'hpet' plugin device by virtual method
00000000000i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00000000000i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] reset of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] reset of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] reset of 'serial' plugin device by virtual method
00000000000i[PLUGIN] reset of 'iodebug' plugin device by virtual method
00000000000i[PLUGIN] reset of 'usb_uhci' plugin device by virtual method
00000000000i[      ] set SIGINT handler to bx_debug_ctrlc_handler
00000001740i[BIOS  ] BIOS BUILD DATE: 03/10/24
00000324041i[KBD   ] reset-disable command received
00000327811i[BIOS  ] Starting rombios32
00000328249i[BIOS  ] Shutdown flag 0
00000328847i[BIOS  ] ram_size=0x02000000
00000329279i[BIOS  ] ram_end=32MB
00000429442i[BIOS  ] Found 1 cpu(s)
00000443380i[BIOS  ] bios_table_addr: 0x000fa128 end=0x000fcc00
00000771196i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00001099131i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b
00001099155i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09
00001099179i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b
00001099203i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09
00001099213i[P2ISA ] write: ELCR2 = 0x0a
00001099982i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a
00001113658i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00001116002i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00001118185i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00001118420i[PIDE  ] BAR #4: i/o base address = 0xc000
00001119036i[BIOS  ] region 4: 0x0000c000
00001121071i[BIOS  ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03
00001121284i[UHCI  ] BAR #4: i/o base address = 0xc020
00001121900i[BIOS  ] region 4: 0x0000c020
00001122028i[UHCI  ] new IRQ line = 9
00001123950i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00001124226i[ACPI  ] new IRQ line = 11
00001124240i[ACPI  ] new IRQ line = 9
00001124268i[ACPI  ] new PM base address: 0xb000
00001124282i[ACPI  ] new SM base address: 0xb100
00001124310i[PCI   ] setting SMRAM control register to 0x4a
00001288445i[CPU0  ] Enter to System Management Mode
00001288455i[CPU0  ] RSM: Resuming from System Management Mode
00001452511i[PCI   ] setting SMRAM control register to 0x0a
00001479176i[BIOS  ] MP table addr=0x000fa200 MPC table addr=0x000fa130 size=0xc8
00001480883i[BIOS  ] SMBIOS table addr=0x000fa210
00001482972i[BIOS  ] ACPI tables: RSDP addr=0x000fa330 ACPI DATA addr=0x01ff0000 size=0xff8
00001485956i[BIOS  ] Firmware waking vector 0x1ff00cc
00001488210i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00001488940i[BIOS  ] bios_table_cur_addr: 0x000fa354
00001599647i[VBIOS ] VGABios ID: vgabios.c 2024-03-03
00001599718i[BXVGA ] VBE known Display Interface b0c0
00001599750i[BXVGA ] VBE known Display Interface b0c5
00001601171i[VBIOS ] VBE Bios ID: vbe.c 2024-03-03
00001784230i[BIOS  ] ata0-0: PCHS=56/16/63 translation=none LCHS=56/16/63
00005217189i[BIOS  ] IDE time out
00035221075i[BIOS  ] Booting from 0000:7c00
00129453711i[BXVGA ] VBE set bpp (32)
00129453723i[BXVGA ] VBE set xres (1920)
00129453735i[BXVGA ] VBE set yres (1200)
00129453818i[BXVGA ] VBE enabling x 1920, y 1200, bpp 32, 9216000 bytes visible
00167259772p[PIC   ] >>PANIC<< master: slave PIC IRQ line not supported
00167259811p[PIC   ] >>PANIC<< slave:  PIC ID = 4 not supported
00167354359e[SER   ] com1: write to tx hold register when not empty
00167354388e[SER   ] com1: write to tx hold register when not empty
00167354417e[SER   ] com1: write to tx hold register when not empty
00167354446e[SER   ] com1: write to tx hold register when not empty
00167354475e[SER   ] com1: write to tx hold register when not empty
00167354648e[SER   ] com1: write to tx hold register when not empty
00167354671e[SER   ] com1: write to tx hold register when not empty
00167354716e[SER   ] com1: write to tx hold register when not empty
00167392466e[SER   ] com1: write to tx hold register when not empty
00167392489e[SER   ] com1: write to tx hold register when not empty
00167392512e[SER   ] com1: write to tx hold register when not empty
00167392535e[SER   ] com1: write to tx hold register when not empty
00167392558e[SER   ] com1: write to tx hold register when not empty
00167392581e[SER   ] com1: write to tx hold register when not empty
00167392604e[SER   ] com1: write to tx hold register when not empty
00167392627e[SER   ] com1: write to tx hold register when not empty
00167392650e[SER   ] com1: write to tx hold register when not empty
00167414685e[SER   ] com1: write to tx hold register when not empty
00167414708e[SER   ] com1: write to tx hold register when not empty
00167414731e[SER   ] com1: write to tx hold register when not empty
00167414754e[SER   ] com1: write to tx hold register when not empty
00167414777e[SER   ] com1: write to tx hold register when not empty
00167414800e[SER   ] com1: write to tx hold register when not empty
00167414823e[SER   ] com1: write to tx hold register when not empty
00167414846e[SER   ] com1: write to tx hold register when not empty
00167414869e[SER   ] com1: write to tx hold register when not empty
00167414892e[SER   ] com1: write to tx hold register when not empty
00167414915e[SER   ] com1: write to tx hold register when not empty
00167414938e[SER   ] com1: write to tx hold register when not empty
00167414961e[SER   ] com1: write to tx hold register when not empty
00167414984e[SER   ] com1: write to tx hold register when not empty
00167423448e[SER   ] com1: write to tx hold register when not empty
00167423477e[SER   ] com1: write to tx hold register when not empty
00167423506e[SER   ] com1: write to tx hold register when not empty
00167423535e[SER   ] com1: write to tx hold register when not empty
00167423564e[SER   ] com1: write to tx hold register when not empty
00167423593e[SER   ] com1: write to tx hold register when not empty
00167423622e[SER   ] com1: write to tx hold register when not empty
00167423651e[SER   ] com1: write to tx hold register when not empty
00167423680e[SER   ] com1: write to tx hold register when not empty
00167423709e[SER   ] com1: write to tx hold register when not empty
00167423738e[SER   ] com1: write to tx hold register when not empty
00167423767e[SER   ] com1: write to tx hold register when not empty
00167423796e[SER   ] com1: write to tx hold register when not empty
00167423825e[SER   ] com1: write to tx hold register when not empty
00167423854e[SER   ] com1: write to tx hold register when not empty
00167423883e[SER   ] com1: write to tx hold register when not empty
00167423912e[SER   ] com1: write to tx hold register when not empty
00167423941e[SER   ] com1: write to tx hold register when not empty
00167423970e[SER   ] com1: write to tx hold register when not empty
00167423999e[SER   ] com1: write to tx hold register when not empty
00167424028e[SER   ] com1: write to tx hold register when not empty
00167424057e[SER   ] com1: write to tx hold register when not empty
00167424330e[SER   ] com1: write to tx hold register when not empty
00167424353e[SER   ] com1: write to tx hold register when not empty
00167424376e[SER   ] com1: write to tx hold register when not empty
00167424421e[SER   ] com1: write to tx hold register when not empty
00167457347e[SER   ] com1: write to tx hold register when not empty
00167457376e[SER   ] com1: write to tx hold register when not empty
00167457405e[SER   ] com1: write to tx hold register when not empty
00167457434e[SER   ] com1: write to tx hold register when not empty
00167457463e[SER   ] com1: write to tx hold register when not empty
00167457492e[SER   ] com1: write to tx hold register when not empty
00167457521e[SER   ] com1: write to tx hold register when not empty
00167457550e[SER   ] com1: write to tx hold register when not empty
00167457579e[SER   ] com1: write to tx hold register when not empty
00167457608e[SER   ] com1: write to tx hold register when not empty
00167457637e[SER   ] com1: write to tx hold register when not empty
00167457666e[SER   ] com1: write to tx hold register when not empty
00167457695e[SER   ] com1: write to tx hold register when not empty
00167457724e[SER   ] com1: write to tx hold register when not empty
00167457753e[SER   ] com1: write to tx hold register when not empty
00167457782e[SER   ] com1: write to tx hold register when not empty
00167457811e[SER   ] com1: write to tx hold register when not empty
00167458139e[SER   ] com1: write to tx hold register when not empty
00167458185e[SER   ] com1: write to tx hold register when not empty
00167458208e[SER   ] com1: write to tx hold register when not empty
00167458231e[SER   ] com1: write to tx hold register when not empty
00167458254e[SER   ] com1: write to tx hold register when not empty
00167458277e[SER   ] com1: write to tx hold register when not empty
00167458300e[SER   ] com1: write to tx hold register when not empty
00167458323e[SER   ] com1: write to tx hold register when not empty
00167458346e[SER   ] com1: write to tx hold register when not empty
00167458391e[SER   ] com1: write to tx hold register when not empty
00167458420e[SER   ] com1: write to tx hold register when not empty
00167458449e[SER   ] com1: write to tx hold register when not empty
00167458478e[SER   ] com1: write to tx hold register when not empty
00167458507e[SER   ] com1: write to tx hold register when not empty
00167458536e[SER   ] com1: write to tx hold register when not empty
00167458565e[SER   ] com1: write to tx hold register when not empty
00167458594e[SER   ] com1: write to tx hold register when not empty
00167458623e[SER   ] com1: write to tx hold register when not empty
00167458652e[SER   ] com1: write to tx hold register when not empty
00167458681e[SER   ] com1: write to tx hold register when not empty
00167458710e[SER   ] com1: write to tx hold register when not empty
00167458739e[SER   ] com1: write to tx hold register when not empty
00167458768e[SER   ] com1: write to tx hold register when not empty
00167458797e[SER   ] com1: write to tx hold register when not empty
00167458826e[SER   ] com1: write to tx hold register when not empty
00167458855e[SER   ] com1: write to tx hold register when not empty
00167459205e[SER   ] com1: write to tx hold register when not empty
00167459228e[SER   ] com1: write to tx hold register when not empty
00167459251e[SER   ] com1: write to tx hold register when not empty
00167459274e[SER   ] com1: write to tx hold register when not empty
00167459297e[SER   ] com1: write to tx hold register when not empty
00167459320e[SER   ] com1: write to tx hold register when not empty
00167459343e[SER   ] com1: write to tx hold register when not empty
00167459366e[SER   ] com1: write to tx hold register when not empty
00167459389e[SER   ] com1: write to tx hold register when not empty
00167459434e[SER   ] com1: write to tx hold register when not empty
00167459463e[SER   ] com1: write to tx hold register when not empty
00167459878e[SER   ] com1: write to tx hold register when not empty
00167459924e[SER   ] com1: write to tx hold register when not empty
00167459947e[SER   ] com1: write to tx hold register when not empty
00167459970e[SER   ] com1: write to tx hold register when not empty
00167459993e[SER   ] com1: write to tx hold register when not empty
00167460016e[SER   ] com1: write to tx hold register when not empty
00167460039e[SER   ] com1: write to tx hold register when not empty
00167460062e[SER   ] com1: write to tx hold register when not empty
00167460085e[SER   ] com1: write to tx hold register when not empty
00167460108e[SER   ] com1: write to tx hold register when not empty
00167460131e[SER   ] com1: write to tx hold register when not empty
00167460154e[SER   ] com1: write to tx hold register when not empty
00167460177e[SER   ] com1: write to tx hold register when not empty
00167460200e[SER   ] com1: write to tx hold register when not empty
00167460223e[SER   ] com1: write to tx hold register when not empty
00167468704e[SER   ] com1: write to tx hold register when not empty
00167468733e[SER   ] com1: write to tx hold register when not empty
00167468762e[SER   ] com1: write to tx hold register when not empty
00167468791e[SER   ] com1: write to tx hold register when not empty
00167468820e[SER   ] com1: write to tx hold register when not empty
00167468849e[SER   ] com1: write to tx hold register when not empty
00167468878e[SER   ] com1: write to tx hold register when not empty
00167468907e[SER   ] com1: write to tx hold register when not empty
00167468936e[SER   ] com1: write to tx hold register when not empty
00167468965e[SER   ] com1: write to tx hold register when not empty
00167468994e[SER   ] com1: write to tx hold register when not empty
00167469023e[SER   ] com1: write to tx hold register when not empty
00167469052e[SER   ] com1: write to tx hold register when not empty
00167469081e[SER   ] com1: write to tx hold register when not empty
00167469110e[SER   ] com1: write to tx hold register when not empty
00167469139e[SER   ] com1: write to tx hold register when not empty
00167469168e[SER   ] com1: write to tx hold register when not empty
00167469197e[SER   ] com1: write to tx hold register when not empty
00167469226e[SER   ] com1: write to tx hold register when not empty
00167469255e[SER   ] com1: write to tx hold register when not empty
00167469284e[SER   ] com1: write to tx hold register when not empty
00167469313e[SER   ] com1: write to tx hold register when not empty
00167469396e[SER   ] com1: write to tx hold register when not empty
00167469442e[SER   ] com1: write to tx hold register when not empty
00167469557e[SER   ] com1: write to tx hold register when not empty
00167469586e[SER   ] com1: write to tx hold register when not empty
00167469615e[SER   ] com1: write to tx hold register when not empty
00167469644e[SER   ] com1: write to tx hold register when not empty
00167469673e[SER   ] com1: write to tx hold register when not empty
00167469702e[SER   ] com1: write to tx hold register when not empty
00167469731e[SER   ] com1: write to tx hold register when not empty
00167469760e[SER   ] com1: write to tx hold register when not empty
00167469789e[SER   ] com1: write to tx hold register when not empty
00167469818e[SER   ] com1: write to tx hold register when not empty
00167469847e[SER   ] com1: write to tx hold register when not empty
00167469876e[SER   ] com1: write to tx hold register when not empty
00167469905e[SER   ] com1: write to tx hold register when not empty
00167469934e[SER   ] com1: write to tx hold register when not empty
00167469963e[SER   ] com1: write to tx hold register when not empty
00167469992e[SER   ] com1: write to tx hold register when not empty
00167470021e[SER   ] com1: write to tx hold register when not empty
00167470050e[SER   ] com1: write to tx hold register when not empty
00167470079e[SER   ] com1: write to tx hold register when not empty
00167470108e[SER   ] com1: write to tx hold register when not empty
00167470137e[SER   ] com1: write to tx hold register when not empty
00167470166e[SER   ] com1: write to tx hold register when not empty
00167470195e[SER   ] com1: write to tx hold register when not empty
00167470224e[SER   ] com1: write to tx hold register when not empty
00167470253e[SER   ] com1: write to tx hold register when not empty
00167470282e[SER   ] com1: write to tx hold register when not empty
00167470311e[SER   ] com1: write to tx hold register when not empty
00167470340e[SER   ] com1: write to tx hold register when not empty
00167470369e[SER   ] com1: write to tx hold register when not empty
00167470427e[SER   ] com1: write to tx hold register when not empty
00167470456e[SER   ] com1: write to tx hold register when not empty
00167470485e[SER   ] com1: write to tx hold register when not empty
00167470514e[SER   ] com1: write to tx hold register when not empty
00167470543e[SER   ] com1: write to tx hold register when not empty
00167470572e[SER   ] com1: write to tx hold register when not empty
00167470601e[SER   ] com1: write to tx hold register when not empty
00167470630e[SER   ] com1: write to tx hold register when not empty
00167470656i[CPU0  ] RDMSR: Read 00000000:fee00900 from MSR_APICBASE
00167470746e[SER   ] com1: write to tx hold register when not empty
00167470775e[SER   ] com1: write to tx hold register when not empty
00167470804e[SER   ] com1: write to tx hold register when not empty
00167470833e[SER   ] com1: write to tx hold register when not empty
00167470862e[SER   ] com1: write to tx hold register when not empty
00167470891e[SER   ] com1: write to tx hold register when not empty
00167470920e[SER   ] com1: write to tx hold register when not empty
00167470949e[SER   ] com1: write to tx hold register when not empty
00167470978e[SER   ] com1: write to tx hold register when not empty
00167471007e[SER   ] com1: write to tx hold register when not empty
00167471036e[SER   ] com1: write to tx hold register when not empty
00167471065e[SER   ] com1: write to tx hold register when not empty
00167471094e[SER   ] com1: write to tx hold register when not empty
00167471123e[SER   ] com1: write to tx hold register when not empty
00167471152e[SER   ] com1: write to tx hold register when not empty
00167471181e[SER   ] com1: write to tx hold register when not empty
00167471210e[SER   ] com1: write to tx hold register when not empty
00167471239e[SER   ] com1: write to tx hold register when not empty
00167471297e[SER   ] com1: write to tx hold register when not empty
00167471326e[SER   ] com1: write to tx hold register when not empty
00167471355e[SER   ] com1: write to tx hold register when not empty
00167471682e[SER   ] com1: write to tx hold register when not empty
00167471705e[SER   ] com1: write to tx hold register when not empty
00167471728e[SER   ] com1: write to tx hold register when not empty
00167471751e[SER   ] com1: write to tx hold register when not empty
00167471774e[SER   ] com1: write to tx hold register when not empty
00167471797e[SER   ] com1: write to tx hold register when not empty
00167471820e[SER   ] com1: write to tx hold register when not empty
00167471843e[SER   ] com1: write to tx hold register when not empty
00167471866e[SER   ] com1: write to tx hold register when not empty
00167471889e[SER   ] com1: write to tx hold register when not empty
00167471934e[SER   ] com1: write to tx hold register when not empty
00167472045e[SER   ] com1: write to tx hold register when not empty
00167472068e[SER   ] com1: write to tx hold register when not empty
00167472091e[SER   ] com1: write to tx hold register when not empty
00167472114e[SER   ] com1: write to tx hold register when not empty
00167472160e[SER   ] com1: write to tx hold register when not empty
00167472183e[SER   ] com1: write to tx hold register when not empty
00167472206e[SER   ] com1: write to tx hold register when not empty
00167472229e[SER   ] com1: write to tx hold register when not empty
00167472252e[SER   ] com1: write to tx hold register when not empty
00167472275e[SER   ] com1: write to tx hold register when not empty
00167472298e[SER   ] com1: write to tx hold register when not empty
00167472321e[SER   ] com1: write to tx hold register when not empty
00167472344e[SER   ] com1: write to tx hold register when not empty
00167472367e[SER   ] com1: write to tx hold register when not empty
00167472390e[SER   ] com1: write to tx hold register when not empty
00167480888e[SER   ] com1: write to tx hold register when not empty
00167480917e[SER   ] com1: write to tx hold register when not empty
00167480946e[SER   ] com1: write to tx hold register when not empty
00167480975e[SER   ] com1: write to tx hold register when not empty
00167481004e[SER   ] com1: write to tx hold register when not empty
00167481033e[SER   ] com1: write to tx hold register when not empty
00167481062e[SER   ] com1: write to tx hold register when not empty
00167481091e[SER   ] com1: write to tx hold register when not empty
00167481120e[SER   ] com1: write to tx hold register when not empty
00167481149e[SER   ] com1: write to tx hold register when not empty
00167481178e[SER   ] com1: write to tx hold register when not empty
00167481207e[SER   ] com1: write to tx hold register when not empty
00167481236e[SER   ] com1: write to tx hold register when not empty
00167481265e[SER   ] com1: write to tx hold register when not empty
00167481294e[SER   ] com1: write to tx hold register when not empty
00167481323e[SER   ] com1: write to tx hold register when not empty
00167481352e[SER   ] com1: write to tx hold register when not empty
00167481381e[SER   ] com1: write to tx hold register when not empty
00167481410e[SER   ] com1: write to tx hold register when not empty
00167481439e[SER   ] com1: write to tx hold register when not empty
00167481468e[SER   ] com1: write to tx hold register when not empty
00167481497e[SER   ] com1: write to tx hold register when not empty
00167481743e[SER   ] com1: write to tx hold register when not empty
00167481766e[SER   ] com1: write to tx hold register when not empty
00167481811e[SER   ] com1: write to tx hold register when not empty
00167481885e[SER   ] com1: write to tx hold register when not empty
00167481914e[SER   ] com1: write to tx hold register when not empty
00167481943e[SER   ] com1: write to tx hold register when not empty
00167481972e[SER   ] com1: write to tx hold register when not empty
00167482001e[SER   ] com1: write to tx hold register when not empty
00167482030e[SER   ] com1: write to tx hold register when not empty
00167482059e[SER   ] com1: write to tx hold register when not empty
00167482088e[SER   ] com1: write to tx hold register when not empty
00167482117e[SER   ] com1: write to tx hold register when not empty
00167482146e[SER   ] com1: write to tx hold register when not empty
00167482175e[SER   ] com1: write to tx hold register when not empty
00167482204e[SER   ] com1: write to tx hold register when not empty
00167482233e[SER   ] com1: write to tx hold register when not empty
00167482262e[SER   ] com1: write to tx hold register when not empty
00167482291e[SER   ] com1: write to tx hold register when not empty
00167482641e[SER   ] com1: write to tx hold register when not empty
00167482664e[SER   ] com1: write to tx hold register when not empty
00167482687e[SER   ] com1: write to tx hold register when not empty
00167482710e[SER   ] com1: write to tx hold register when not empty
00167482733e[SER   ] com1: write to tx hold register when not empty
00167482756e[SER   ] com1: write to tx hold register when not empty
00167482779e[SER   ] com1: write to tx hold register when not empty
00167482802e[SER   ] com1: write to tx hold register when not empty
00167482825e[SER   ] com1: write to tx hold register when not empty
00167482870e[SER   ] com1: write to tx hold register when not empty
00167482936e[SER   ] com1: write to tx hold register when not empty
00167482965e[SER   ] com1: write to tx hold register when not empty
00167482994e[SER   ] com1: write to tx hold register when not empty
00167483023e[SER   ] com1: write to tx hold register when not empty
00167483052e[SER   ] com1: write to tx hold register when not empty
00167483081e[SER   ] com1: write to tx hold register when not empty
00167483110e[SER   ] com1: write to tx hold register when not empty
00167483139e[SER   ] com1: write to tx hold register when not empty
00167483168e[SER   ] com1: write to tx hold register when not empty
00167483197e[SER   ] com1: write to tx hold register when not empty
00167483226e[SER   ] com1: write to tx hold register when not empty
00167483255e[SER   ] com1: write to tx hold register when not empty
00167483284e[SER   ] com1: write to tx hold register when not empty
00167483313e[SER   ] com1: write to tx hold register when not empty
00167483342e[SER   ] com1: write to tx hold register when not empty
00167483371e[SER   ] com1: write to tx hold register when not empty
00167483400e[SER   ] com1: write to tx hold register when not empty
00167483429e[SER   ] com1: write to tx hold register when not empty
00167483487e[SER   ] com1: write to tx hold register when not empty
00167483516e[SER   ] com1: write to tx hold register when not empty
00167483545e[SER   ] com1: write to tx hold register when not empty
00167483574e[SER   ] com1: write to tx hold register when not empty
00167483603e[SER   ] com1: write to tx hold register when not empty
00167483632e[SER   ] com1: write to tx hold register when not empty
00167483661e[SER   ] com1: write to tx hold register when not empty
00167484018e[SER   ] com1: write to tx hold register when not empty
00167484047e[SER   ] com1: write to tx hold register when not empty
00167484076e[SER   ] com1: write to tx hold register when not empty
00167484105e[SER   ] com1: write to tx hold register when not empty
00167484134e[SER   ] com1: write to tx hold register when not empty
00167484163e[SER   ] com1: write to tx hold register when not empty
00167484192e[SER   ] com1: write to tx hold register when not empty
00167484221e[SER   ] com1: write to tx hold register when not empty
00167484250e[SER   ] com1: write to tx hold register when not empty
00167484279e[SER   ] com1: write to tx hold register when not empty
00167484308e[SER   ] com1: write to tx hold register when not empty
00167484366e[SER   ] com1: write to tx hold register when not empty
00167484395e[SER   ] com1: write to tx hold register when not empty
00167484424e[SER   ] com1: write to tx hold register when not empty
00167484453e[SER   ] com1: write to tx hold register when not empty
00167484482e[SER   ] com1: write to tx hold register when not empty
00167484511e[SER   ] com1: write to tx hold register when not empty
00167484540e[SER   ] com1: write to tx hold register when not empty
00167484569e[SER   ] com1: write to tx hold register when not empty
00167484598e[SER   ] com1: write to tx hold register when not empty
00167484627e[SER   ] com1: write to tx hold register when not empty
00167484954e[SER   ] com1: write to tx hold register when not empty
00167484977e[SER   ] com1: write to tx hold register when not empty
00167485000e[SER   ] com1: write to tx hold register when not empty
00167485023e[SER   ] com1: write to tx hold register when not empty
00167485046e[SER   ] com1: write to tx hold register when not empty
00167485069e[SER   ] com1: write to tx hold register when not empty
00167485092e[SER   ] com1: write to tx hold register when not empty
00167485115e[SER   ] com1: write to tx hold register when not empty
00167485138e[SER   ] com1: write to tx hold register when not empty
00167485161e[SER   ] com1: write to tx hold register when not empty
00167485341e[SER   ] com1: write to tx hold register when not empty
00167485370e[SER   ] com1: write to tx hold register when not empty
00167485399e[SER   ] com1: write to tx hold register when not empty
00167485428e[SER   ] com1: write to tx hold register when not empty
00167485457e[SER   ] com1: write to tx hold register when not empty
00167485486e[SER   ] com1: write to tx hold register when not empty
00167485515e[SER   ] com1: write to tx hold register when not empty
00167485544e[SER   ] com1: write to tx hold register when not empty
00167485573e[SER   ] com1: write to tx hold register when not empty
00167485602e[SER   ] com1: write to tx hold register when not empty
00167485631e[SER   ] com1: write to tx hold register when not empty
00167485660e[SER   ] com1: write to tx hold register when not empty
00167485689e[SER   ] com1: write to tx hold register when not empty
00167485718e[SER   ] com1: write to tx hold register when not empty
00167485747e[SER   ] com1: write to tx hold register when not empty
00167486097e[SER   ] com1: write to tx hold register when not empty
00167486120e[SER   ] com1: write to tx hold register when not empty
00167486143e[SER   ] com1: write to tx hold register when not empty
00167486166e[SER   ] com1: write to tx hold register when not empty
00167486189e[SER   ] com1: write to tx hold register when not empty
00167486212e[SER   ] com1: write to tx hold register when not empty
00167486235e[SER   ] com1: write to tx hold register when not empty
00167486258e[SER   ] com1: write to tx hold register when not empty
00167486281e[SER   ] com1: write to tx hold register when not empty
00167486326e[SER   ] com1: write to tx hold register when not empty
00167486741i[KBD   ] Switched to scancode set 1
00167486858e[SER   ] com1: write to tx hold register when not empty
00167486887e[SER   ] com1: write to tx hold register when not empty
00167486916e[SER   ] com1: write to tx hold register when not empty
00167486974e[SER   ] com1: write to tx hold register when not empty
00167487003e[SER   ] com1: write to tx hold register when not empty
00167487032e[SER   ] com1: write to tx hold register when not empty
00167487178e[SER   ] com1: write to tx hold register when not empty
00167487201e[SER   ] com1: write to tx hold register when not empty
00167487224e[SER   ] com1: write to tx hold register when not empty
00167487247e[SER   ] com1: write to tx hold register when not empty
00167487292e[SER   ] com1: write to tx hold register when not empty
00167487321e[SER   ] com1: write to tx hold register when not empty
00167487350e[SER   ] com1: write to tx hold register when not empty
00167487379e[SER   ] com1: write to tx hold register when not empty
00167487408e[SER   ] com1: write to tx hold register when not empty
00167487437e[SER   ] com1: write to tx hold register when not empty
00167487466e[SER   ] com1: write to tx hold register when not empty
00167487495e[SER   ] com1: write to tx hold register when not empty
00167487524e[SER   ] com1: write to tx hold register when not empty
00167487670e[SER   ] com1: write to tx hold register when not empty
00167487693e[SER   ] com1: write to tx hold register when not empty
00167487716e[SER   ] com1: write to tx hold register when not empty
00167487739e[SER   ] com1: write to tx hold register when not empty
00167487784e[SER   ] com1: write to tx hold register when not empty
00167488590e[SER   ] com1: write to tx hold register when not empty
00167488619e[SER   ] com1: write to tx hold register when not empty
00167488648e[SER   ] com1: write to tx hold register when not empty
00167488706e[SER   ] com1: write to tx hold register when not empty
00167488735e[SER   ] com1: write to tx hold register when not empty
00167488764e[SER   ] com1: write to tx hold register when not empty
00167488793e[SER   ] com1: write to tx hold register when not empty
00167488822e[SER   ] com1: write to tx hold register when not empty
00167488851e[SER   ] com1: write to tx hold register when not empty
00167488996e[SER   ] com1: write to tx hold register when not empty
00167489019e[SER   ] com1: write to tx hold register when not empty
00167489042e[SER   ] com1: write to tx hold register when not empty
00167489065e[SER   ] com1: write to tx hold register when not empty
00167489110e[SER   ] com1: write to tx hold register when not empty
00167491619e[SER   ] com1: write to tx hold register when not empty
00167491648e[SER   ] com1: write to tx hold register when not empty
00167491677e[SER   ] com1: write to tx hold register when not empty
00167491706e[SER   ] com1: write to tx hold register when not empty
00167491735e[SER   ] com1: write to tx hold register when not empty
00167491764e[SER   ] com1: write to tx hold register when not empty
00167491793e[SER   ] com1: write to tx hold register when not empty
00167491822e[SER   ] com1: write to tx hold register when not empty
00167491851e[SER   ] com1: write to tx hold register when not empty
00167491996e[SER   ] com1: write to tx hold register when not empty
00167492019e[SER   ] com1: write to tx hold register when not empty
00167492042e[SER   ] com1: write to tx hold register when not empty
00167492065e[SER   ] com1: write to tx hold register when not empty
00167492110e[SER   ] com1: write to tx hold register when not empty
00168492521e[SER   ] com1: write to tx hold register when not empty
00168492550e[SER   ] com1: write to tx hold register when not empty
00168492579e[SER   ] com1: write to tx hold register when not empty
00168492608e[SER   ] com1: write to tx hold register when not empty
00168492637e[SER   ] com1: write to tx hold register when not empty
00168492666e[SER   ] com1: write to tx hold register when not empty
00168492695e[SER   ] com1: write to tx hold register when not empty
00168492724e[SER   ] com1: write to tx hold register when not empty
00168492753e[SER   ] com1: write to tx hold register when not empty
00168492782e[SER   ] com1: write to tx hold register when not empty
00168492811e[SER   ] com1: write to tx hold register when not empty
00168492840e[SER   ] com1: write to tx hold register when not empty
00168492869e[SER   ] com1: write to tx hold register when not empty
00168492898e[SER   ] com1: write to tx hold register when not empty
00168492927e[SER   ] com1: write to tx hold register when not empty
00168492956e[SER   ] com1: write to tx hold register when not empty
00168492985e[SER   ] com1: write to tx hold register when not empty
00168493014e[SER   ] com1: write to tx hold register when not empty
00168493043e[SER   ] com1: write to tx hold register when not empty
00168493072e[SER   ] com1: write to tx hold register when not empty
00168493101e[SER   ] com1: write to tx hold register when not empty
00168493130e[SER   ] com1: write to tx hold register when not empty
00168493159e[SER   ] com1: write to tx hold register when not empty
00168493188e[SER   ] com1: write to tx hold register when not empty
00168493217e[SER   ] com1: write to tx hold register when not empty
00168493246e[SER   ] com1: write to tx hold register when not empty
00168493275e[SER   ] com1: write to tx hold register when not empty
00168493304e[SER   ] com1: write to tx hold register when not empty
00168493362e[SER   ] com1: write to tx hold register when not empty
00168493391e[SER   ] com1: write to tx hold register when not empty
00168493420e[SER   ] com1: write to tx hold register when not empty
00168493449e[SER   ] com1: write to tx hold register when not empty
00168493478e[SER   ] com1: write to tx hold register when not empty
00168493778e[SER   ] com1: write to tx hold register when not empty
00168493801e[SER   ] com1: write to tx hold register when not empty
00168493824e[SER   ] com1: write to tx hold register when not empty
00168493847e[SER   ] com1: write to tx hold register when not empty
00168493870e[SER   ] com1: write to tx hold register when not empty
00168493915e[SER   ] com1: write to tx hold register when not empty
00326632619e[SER   ] com1: write to tx hold register when not empty
00326632648e[SER   ] com1: write to tx hold register when not empty
00326632677e[SER   ] com1: write to tx hold register when not empty
00326632706e[SER   ] com1: write to tx hold register when not empty
00326632735e[SER   ] com1: write to tx hold register when not empty
00326632764e[SER   ] com1: write to tx hold register when not empty
00326632793e[SER   ] com1: write to tx hold register when not empty
00326632822e[SER   ] com1: write to tx hold register when not empty
00326632851e[SER   ] com1: write to tx hold register when not empty
00326632998e[SER   ] com1: write to tx hold register when not empty
00326633021e[SER   ] com1: write to tx hold register when not empty
00326633044e[SER   ] com1: write to tx hold register when not empty
00326633067e[SER   ] com1: write to tx hold register when not empty
00326633112e[SER   ] com1: write to tx hold register when not empty
00334672619e[SER   ] com1: write to tx hold register when not empty
00334672648e[SER   ] com1: write to tx hold register when not empty
00334672677e[SER   ] com1: write to tx hold register when not empty
00334672706e[SER   ] com1: write to tx hold register when not empty
00334672735e[SER   ] com1: write to tx hold register when not empty
00334672764e[SER   ] com1: write to tx hold register when not empty
00334672793e[SER   ] com1: write to tx hold register when not empty
00334672822e[SER   ] com1: write to tx hold register when not empty
00334672851e[SER   ] com1: write to tx hold register when not empty
00334672997e[SER   ] com1: write to tx hold register when not empty
00334673020e[SER   ] com1: write to tx hold register when not empty
00334673043e[SER   ] com1: write to tx hold register when not empty
00334673066e[SER   ] com1: write to tx hold register when not empty
00334673111e[SER   ] com1: write to tx hold register when not empty
00408751619e[SER   ] com1: write to tx hold register when not empty
00408751648e[SER   ] com1: write to tx hold register when not empty
00408751677e[SER   ] com1: write to tx hold register when not empty
00408751706e[SER   ] com1: write to tx hold register when not empty
00408751735e[SER   ] com1: write to tx hold register when not empty
00408751764e[SER   ] com1: write to tx hold register when not empty
00408751793e[SER   ] com1: write to tx hold register when not empty
00408751822e[SER   ] com1: write to tx hold register when not empty
00408751851e[SER   ] com1: write to tx hold register when not empty
00408751979e[SER   ] com1: write to tx hold register when not empty
00408752002e[SER   ] com1: write to tx hold register when not empty
00408752025e[SER   ] com1: write to tx hold register when not empty
00408752070e[SER   ] com1: write to tx hold register when not empty
00420652619e[SER   ] com1: write to tx hold register when not empty
00420652648e[SER   ] com1: write to tx hold register when not empty
00420652677e[SER   ] com1: write to tx hold register when not empty
00420652706e[SER   ] com1: write to tx hold register when not empty
00420652735e[SER   ] com1: write to tx hold register when not empty
00420652764e[SER   ] com1: write to tx hold register when not empty
00420652793e[SER   ] com1: write to tx hold register when not empty
00420652822e[SER   ] com1: write to tx hold register when not empty
00420652851e[SER   ] com1: write to tx hold register when not empty
00420652997e[SER   ] com1: write to tx hold register when not empty
00420653020e[SER   ] com1: write to tx hold register when not empty
00420653043e[SER   ] com1: write to tx hold register when not empty
00420653066e[SER   ] com1: write to tx hold register when not empty
00420653111e[SER   ] com1: write to tx hold register when not empty
00465142619e[SER   ] com1: write to tx hold register when not empty
00465142648e[SER   ] com1: write to tx hold register when not empty
00465142677e[SER   ] com1: write to tx hold register when not empty
00465142706e[SER   ] com1: write to tx hold register when not empty
00465142735e[SER   ] com1: write to tx hold register when not empty
00465142764e[SER   ] com1: write to tx hold register when not empty
00465142793e[SER   ] com1: write to tx hold register when not empty
00465142822e[SER   ] com1: write to tx hold register when not empty
00465142851e[SER   ] com1: write to tx hold register when not empty
00465142979e[SER   ] com1: write to tx hold register when not empty
00465143002e[SER   ] com1: write to tx hold register when not empty
00465143025e[SER   ] com1: write to tx hold register when not empty
00465143070e[SER   ] com1: write to tx hold register when not empty
00477751619e[SER   ] com1: write to tx hold register when not empty
00477751648e[SER   ] com1: write to tx hold register when not empty
00477751677e[SER   ] com1: write to tx hold register when not empty
00477751706e[SER   ] com1: write to tx hold register when not empty
00477751735e[SER   ] com1: write to tx hold register when not empty
00477751764e[SER   ] com1: write to tx hold register when not empty
00477751793e[SER   ] com1: write to tx hold register when not empty
00477751822e[SER   ] com1: write to tx hold register when not empty
00477751851e[SER   ] com1: write to tx hold register when not empty
00477751997e[SER   ] com1: write to tx hold register when not empty
00477752020e[SER   ] com1: write to tx hold register when not empty
00477752043e[SER   ] com1: write to tx hold register when not empty
00477752066e[SER   ] com1: write to tx hold register when not empty
00477752111e[SER   ] com1: write to tx hold register when not empty
00583910000p[XGUI  ] >>PANIC<< POWER button turned off.
00583910000i[CPU0  ] CPU is in protected mode (active)
00583910000i[CPU0  ] CS.mode = 32 bit
00583910000i[CPU0  ] SS.mode = 32 bit
00583910000i[CPU0  ] EFER   = 0x00000000
00583910000i[CPU0  ] | EAX=cc0000b0  EBX=0010f880  ECX=c010f778  EDX=000003f8
00583910000i[CPU0  ] | ESP=c010f848  EBP=c010f870  ESI=00110000  EDI=00107440
00583910000i[CPU0  ] | IOPL=0 ID vip vif ac vm rf nt of df IF tf SF zf af PF cf
00583910000i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
00583910000i[CPU0  ] |  CS:0008( 0001| 0|  0) 00000000 ffffffff 1 1
00583910000i[CPU0  ] |  DS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00583910000i[CPU0  ] |  SS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00583910000i[CPU0  ] |  ES:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00583910000i[CPU0  ] |  FS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00583910000i[CPU0  ] |  GS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00583910000i[CPU0  ] | EIP=c01034a6 (c01034a6)
00583910000i[CPU0  ] | CR0=0xe0000011 CR2=0x00000000
00583910000i[CPU0  ] | CR3=0x00108000 CR4=0x00000000
00583910000i[CMOS  ] Last time: 1729505872 tz=utc (Mon Oct 21 10:17:52   2024)
00583910000i[XGUI  ] Exit
00583910000i[SIM   ] quit_sim called with exit code 1
